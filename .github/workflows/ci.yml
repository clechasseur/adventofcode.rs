name: CI

on:
  push:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CI: 1

jobs:
  clippy:
    name: Clippy validation
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust with clippy
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: stable
          components: clippy
          cache: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          prefix-key: v2-rust
          cache-on-failure: true

      - name: Run clippy
        uses: clechasseur/rs-clippy-check@24d66924f748522acf015e8642b7fb8cd81b4dbc # v4.0.3
        with:
          args: --workspace --all-targets --feature-powerset -- -D warnings
          tool: cargo-hack
          cache-key: v1-clippy

  fmt:
    name: Rustfmt check
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust nightly with rustfmt
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: nightly
          components: rustfmt
          cache: false

      - name: Run Rustfmt
        uses: clechasseur/rs-fmt-check@e1bd0f5c24ced02542ed905bde212ffc9c324863 # v2.0.8
        with:
          args: --all

  build:
    name: Build for Rust ${{ matrix.toolchain }}${{ matrix.experimental && ' (experimental)' || '' }} on ${{ matrix.os }}${{ matrix.ignore-lock && ' without Cargo.lock' || '' }}
    strategy:
      fail-fast: false
      matrix:
        toolchain: [ 1.81.0, stable ]
        os: [ ubuntu-24.04 ]
        ignore-lock: [ false ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Remove Cargo.lock
        if: ${{ matrix.ignore-lock }}
        run: rm Cargo.lock

      - name: Install Rust ${{ matrix.toolchain }}
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: ${{ matrix.toolchain }}
          cache: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          prefix-key: v3-rust
          key: ignore-lock-${{ matrix.ignore-lock }}
          cache-on-failure: true

      - name: Install required tools
        uses: taiki-e/install-action@2db346588ecc179293df26b2f8dcc61d3b3ecc40 # v2.49.46
        with:
          tool: just,cargo-hack
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run checks on feature powerset
        run: just check-powerset

      - name: Run tests
        run: just test
