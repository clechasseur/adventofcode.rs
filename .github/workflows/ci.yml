name: CI

on:
  push:
  workflow_dispatch:

env:
  CI: 1

jobs:
  clippy:
    name: Clippy validation${{ matrix.all-features && ' with all features' || '' }}
    strategy:
      fail-fast: false
      matrix:
        all-features: [ false ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust with clippy
        uses: actions-rust-lang/setup-rust-toolchain@11df97af8e8102fd60b60a77dfbf58d40cd843b8 # v1.10.1
        with:
          toolchain: stable
          components: clippy
          cache: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7
        with:
          prefix-key: v1-rust
          key: all-features-${{ matrix.all-features }}
          cache-on-failure: true

      - name: Run clippy
        uses: clechasseur/rs-clippy-check@c6fff255f0b3d3cbae04efd0d164b1ed3a773c1d # v4.0.0
        with:
          args: --workspace --all-targets ${{ matrix.all-features && '--all-features' || '' }} -- -D warnings

  fmt:
    name: Rustfmt check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust nightly with rustfmt
        uses: actions-rust-lang/setup-rust-toolchain@11df97af8e8102fd60b60a77dfbf58d40cd843b8 # v1.10.1
        with:
          toolchain: nightly
          components: rustfmt
          cache: false

      - name: Run Rustfmt
        uses: clechasseur/rs-fmt-check@e1bd0f5c24ced02542ed905bde212ffc9c324863 # v2.0.8
        with:
          args: --all

  build:
    name: Build for Rust ${{ matrix.toolchain }}${{ matrix.experimental && ' (experimental)' || '' }} on ${{ matrix.os }}${{ matrix.ignore-lock && ' without Cargo.lock' || '' }}${{ matrix.all-features && ' with all features' || '' }}
    strategy:
      fail-fast: false
      matrix:
        toolchain: [ 1.75.0, stable ]
        os: [ ubuntu ]
        ignore-lock: [ false ]
        all-features: [ false ]
        include:
          - experimental: false
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Remove Cargo.lock
        if: ${{ matrix.ignore-lock }}
        run: rm Cargo.lock

      - name: Install Rust ${{ matrix.toolchain }}
        uses: actions-rust-lang/setup-rust-toolchain@11df97af8e8102fd60b60a77dfbf58d40cd843b8 # v1.10.1
        with:
          toolchain: ${{ matrix.toolchain }}
          cache: false

      - name: Rust Cache
        if: ${{ !matrix.experimental }}
        uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7
        with:
          prefix-key: v2-rust
          key: ignore-lock-${{ matrix.ignore-lock }}-all-features-${{ matrix.all-features }}
          cache-on-failure: true

      - name: Install just
        uses: taiki-e/install-action@65835784ace7c5a78745b6dbeb9bf85346430497 # v2.47.32
        with:
          tool: just
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run checks
        run: just all_features=${{ matrix.all-features }} check

      - name: Run tests
        run: just all_features=${{ matrix.all-features }} test
